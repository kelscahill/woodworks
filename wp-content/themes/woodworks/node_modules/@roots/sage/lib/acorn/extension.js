import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, label } from '@roots/bud-framework/extension/decorators';
import eventCompilerDone from './hooks/event.compiler.done.js';
/**
 * Acorn adapter
 *
 * @public
 * @decorator `@label`
 */
let Acorn = class Acorn extends Extension {
    /**
     * `register` callback
     *
     * @public
     * @decorator `@bind`
     */
    async register() {
        /**
         * Override output directory for svg assets
         *
         * `@roots/bud-build` places them, by default, in `@dist/svg/`
         */
        this.app.build.rules.svg.setGenerator(this.svgGenerator);
        /**
         * Write hmr.json
         */
        this.app.isDevelopment &&
            this.app.hooks.action('compiler.close', eventCompilerDone);
    }
    /**
     * `afterConfig` callback
     */
    async afterConfig() {
        this.app.extensions
            .get('@roots/bud-entrypoints')
            .setOption('publicPath', '');
        this.app.extensions
            .get('webpack-manifest-plugin')
            .setOption('publicPath', '');
        this.app.isDevelopment && this.app.setPublicPath('/');
    }
    /**
     * SVG generator
     *
     * @public
     * @decorator `@bind`
     */
    svgGenerator({ path, relPath }) {
        return { filename: relPath(path('@dist'), path('@dist/images/@name')) };
    }
};
__decorate([
    bind
], Acorn.prototype, "register", null);
__decorate([
    bind
], Acorn.prototype, "afterConfig", null);
__decorate([
    bind
], Acorn.prototype, "svgGenerator", null);
Acorn = __decorate([
    label('@roots/sage/acorn')
], Acorn);
export default Acorn;
//# sourceMappingURL=extension.js.map