import type { GlobalSettingsAndStyles as WPThemeJson } from '@roots/bud-preset-wordpress/theme';
export interface TailwindSize {
    [key: string]: [string, {
        lineHeight: string;
    }] | string;
}
export declare type WordPressSizes = WPThemeJson['settings']['typography']['fontSizes'];
/**
 * Get font families from a tailwind config file
 *
 * @param path - path to tailwind.config.json
 * @returns config.theme.extends.fontSize
 */
export interface getFontSize {
    (path: string): Promise<Record<string, [string, {
        lineHeight: string;
    }] | string>>;
}
/**
 * Make a theme.json fonts.color item from a slug and a color
 *
 * @param slug - color slug
 * @param value - color value
 * @returns WordPress theme.json color
 */
export interface transform {
    ([slug, value]: [string, string]): WordPressSizes[any];
}
/**
 * TailwindCSS fonts entry to WordPress fonts entries
 *
 * @returns
 */
export interface toWordPressEntries {
    ([entry, path]: [[string, TailwindSize], Array<string>]): WordPressSizes;
}
/**
 * Transform tailwindcss fonts to wordpress theme.json fonts
 *
 * @param fonts - from tailwindcss
 *
 * @public
 */
export interface transformFonts {
    (fonts: TailwindSize): WordPressSizes;
}
export declare const getFontSize: getFontSize;
export declare const transformEntry: transform;
export declare const transformFonts: transformFonts;
//# sourceMappingURL=fontSize.d.ts.map