import type { GlobalSettingsAndStyles as WPThemeJson } from '@roots/bud-preset-wordpress/theme';
export declare type WordPressColors = WPThemeJson['settings']['color']['palette'];
export interface TailwindColors {
    [key: string]: string | TailwindColors;
}
/**
 * Get color palette from a tailwind config file
 *
 * @param path - path to tailwind.config.json
 * @returns config.theme.extend.colors
 *
 * @public
 */
export interface getPalette {
    (path: string): Promise<TailwindColors>;
}
/**
 * Make a theme.json palette.color item from a slug and a color
 *
 * @param slug - color slug
 * @param value - color value
 * @returns WordPress theme.json color
 */
export interface transform {
    (slug: Array<string>, color: string): WordPressColors[any];
}
/**
 * TailwindCSS palette entry to WordPress palette entries
 *
 * @returns
 */
export interface toWordPressEntries {
    ([entry, path]: [
        [
            string,
            string | TailwindColors
        ],
        Array<string>
    ]): WordPressColors;
}
/**
 * Transform tailwindcss palette to wordpress theme.json palette
 *
 * @param palette - from tailwindcss
 *
 * @public
 */
export interface transformPalette {
    (palette: TailwindColors): WordPressColors;
}
export declare const getPalette: getPalette;
export declare const transform: transform;
export declare const toWordPressEntries: toWordPressEntries;
export declare const transformPalette: transformPalette;
//# sourceMappingURL=palette.d.ts.map