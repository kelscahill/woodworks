import { __decorate } from "tslib";
import { bind } from 'helpful-decorators';
import { isString } from 'lodash-es';
import { Spinner } from './spinner.js';
/**
 * Line update
 *
 * @public
 */
export class Line {
    constructor(spinner = true) {
        this.isComplete = false;
        if (spinner)
            this.spinner = new Spinner();
    }
    get icon() {
        if (!this.spinner || this.isComplete)
            return null;
        return this.spinner.frame;
    }
    get frame() {
        return this.icon ? [this.icon, this.text].join(' ') : this.text;
    }
    update(...text) {
        this.text = text.some(i => !isString(i)) ? null : text?.join(' ');
        return this;
    }
    complete(isComplete = true) {
        this.isComplete = isComplete;
        return this;
    }
}
__decorate([
    bind
], Line.prototype, "update", null);
__decorate([
    bind
], Line.prototype, "complete", null);
//# sourceMappingURL=line.js.map