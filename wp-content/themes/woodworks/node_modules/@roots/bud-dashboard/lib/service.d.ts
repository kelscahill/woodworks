/// <reference types="node" />
import { Dashboard as Base, Service } from '@roots/bud-framework';
import type { StatsCompilation } from 'webpack';
import { Line } from './render/line.js';
/**
 * Dashboard service
 *
 * @public
 */
export declare class Dashboard extends Service implements Base.Service {
    /**
     * Interval timer
     *
     * @public
     */
    interval: NodeJS.Timer;
    /**
     * Progress
     *
     * @public
     */
    progress: Line;
    /**
     * output
     *
     * @public
     */
    protected output: Array<string>;
    /**
     * Current progress percentage
     *
     * @public
     */
    protected percent: number;
    /**
     * Current frame
     *
     * @public
     */
    protected frame: string;
    /**
     * @override
     */
    render(str: string): void;
    /**
     * `register` callback
     *
     * @public
     * @decorator `@bind`
     */
    register(): Promise<void>;
    /**
     * Update cli
     *
     * @public
     * @decorator `@bind`
     */
    update(): this;
    /**
     * Run dashboard
     *
     * @public
     * @decorator `@bind`
     */
    stats({ stats, errors, warnings, }: {
        stats: StatsCompilation;
        errors: any;
        warnings: any;
    }): this;
    /**
     * Progress callback
     *
     * @public
     * @decorator `@bind`
     */
    progressCallback(percent: number, scope: string): void;
}
//# sourceMappingURL=service.d.ts.map