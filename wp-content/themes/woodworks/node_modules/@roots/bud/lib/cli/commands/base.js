import { __decorate } from "tslib";
import { Command } from 'clipanion';
import { bind } from 'helpful-decorators';
import * as disk from '../config/disk.config.js';
import { Notifier } from '../notifier/index.js';
/**
 * Base command
 *
 * @public
 */
export class BaseCommand extends Command {
    /**
     * Application logger
     *
     * @public
     */
    get logger() {
        return this.app.logger.instance;
    }
    /**
     * Bootstrap Application
     *
     * @returns Bud
     */
    async make() {
        this.notifier = new Notifier(this.app);
        this.app.hooks.action('compiler.after', async () => {
            this.app.compiler.compilation.hooks.done.tap('bud-cli-notifier', this.notifier.notify);
        });
        try {
            await disk.config(this.app);
        }
        catch (error) {
            this.app.error(error);
        }
        return this.app;
    }
    /**
     * Run the build
     *
     * @public
     * @decorator `@bind`
     */
    async run() {
        await this.app.run();
    }
}
__decorate([
    bind
], BaseCommand.prototype, "make", null);
__decorate([
    bind
], BaseCommand.prototype, "run", null);
//# sourceMappingURL=base.js.map