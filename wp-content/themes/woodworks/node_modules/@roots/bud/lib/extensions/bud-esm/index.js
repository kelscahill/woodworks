import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, expose, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Extension enabling ESM compilation output
 *
 * @public
 * @decorator `@label`
 * @decorator `@expose`
 */
let Esm = class Esm extends Extension {
    /**
     * `beforeBuild` callback
     *
     * @public
     * @decorator `@bind`
     */
    async beforeBuild() {
        this.app.hooks
            .on('build.experiments.outputModule', true)
            .hooks.on('build.output.module', true);
        this.app.project.has('manifest.imports') &&
            this.app.externals(this.app.project.get('manifest.imports'));
    }
    /**
     * `when` callback
     *
     * @public
     * @decorator `@bind`
     */
    async when() {
        return false;
    }
};
__decorate([
    bind
], Esm.prototype, "beforeBuild", null);
__decorate([
    bind
], Esm.prototype, "when", null);
Esm = __decorate([
    label('esm'),
    expose('esm')
], Esm);
export default Esm;
//# sourceMappingURL=index.js.map