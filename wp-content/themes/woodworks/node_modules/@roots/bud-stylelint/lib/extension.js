import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, expose, label, options, plugin, } from '@roots/bud-framework/extension/decorators';
import StylelintWebpackPlugin from 'stylelint-webpack-plugin';
/**
 * Bud stylelint extension
 *
 * @public
 * @decorator `@label`
 * @decorator `@plugin`
 * @decorator `@options`
 * @decorator `@expose`
 */
let BudStylelintWebpackPlugin = class BudStylelintWebpackPlugin extends Extension {
    /**
     * Fail build on stylelint error
     *
     * @public
     * @decorator `@bind`
     */
    failOnError(fail = true) {
        this.options.failOnError = fail;
        return this;
    }
    /**
     * Fail build on stylelint warning
     *
     * @public
     * @decorator `@bind`
     */
    failOnWarning(fail = true) {
        this.options.failOnWarning = fail;
        return this;
    }
};
__decorate([
    bind
], BudStylelintWebpackPlugin.prototype, "failOnError", null);
__decorate([
    bind
], BudStylelintWebpackPlugin.prototype, "failOnWarning", null);
BudStylelintWebpackPlugin = __decorate([
    label('@roots/bud-stylelint'),
    plugin(StylelintWebpackPlugin),
    options({ context: app => app.path('@src') }),
    expose('stylelint')
], BudStylelintWebpackPlugin);
export default BudStylelintWebpackPlugin;
//# sourceMappingURL=extension.js.map