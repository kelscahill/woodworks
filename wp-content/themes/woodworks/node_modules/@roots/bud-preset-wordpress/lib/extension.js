import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, dependsOn, expose, label, options, } from '@roots/bud-framework/extension/decorators';
import BudBrowsersListCheck from './browserslist-check/extension.js';
let BudPresetWordPress = class BudPresetWordPress extends Extension {
    get origin() {
        return this._origin;
    }
    set origin(origin) {
        this._origin = origin instanceof URL ? origin : new URL(origin);
    }
    async init() {
        if (!this.app.env.has('WP_HOME') || !this.app.env.isString('WP_HOME'))
            return;
        this.origin = this.app.env.get('WP_HOME');
    }
    async register() {
        /**
         * This extension should be removed in a future release.
         * Added in 6.2.1.
         */
        await this.app.extensions.add(BudBrowsersListCheck);
        if (!this.app.extensions.has('@roots/bud-esbuild')) {
            const { default: react } = await import('@roots/bud-react');
            await this.app.extensions.add(react);
        }
        if (!this.origin)
            return;
        try {
            this.proxyOrigin(this.origin);
        }
        catch (err) {
            this.logger.warn(`Tried to set proxy based on value of WP_HOME but failed\n`, `WP_HOME is set as: ${this.origin}`, `\n`, err);
        }
    }
    proxyOrigin(origin) {
        this.origin = origin;
        this.app.proxy(this.origin);
        return this;
    }
};
__decorate([
    bind
], BudPresetWordPress.prototype, "init", null);
__decorate([
    bind
], BudPresetWordPress.prototype, "register", null);
__decorate([
    bind
], BudPresetWordPress.prototype, "proxyOrigin", null);
BudPresetWordPress = __decorate([
    label('@roots/bud-preset-wordpress'),
    dependsOn([
        '@roots/bud-entrypoints',
        '@roots/bud-preset-recommend',
        '@roots/bud-wordpress-externals',
        '@roots/bud-wordpress-dependencies',
        '@roots/bud-wordpress-manifests',
    ]),
    options({ replaceLink: true }),
    expose('wordpress')
], BudPresetWordPress);
export default BudPresetWordPress;
//# sourceMappingURL=extension.js.map