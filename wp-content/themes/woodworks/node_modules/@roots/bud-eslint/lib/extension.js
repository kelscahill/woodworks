import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework';
import { bind, expose, label, options, plugin, } from '@roots/bud-framework/extension/decorators';
import EslintPlugin from 'eslint-webpack-plugin';
/**
 * Eslint webpack plugin adapter
 *
 * @public
 * @decorator `@label`
 * @decorator `@expose`
 * @decorator `@plugin`
 * @decorator `@options`
 */
let BudEslint = class BudEslint extends Extension {
    /**
     * `register` callback
     *
     * @public
     * @decorator `@bind`
     */
    async register() {
        const eslintPath = await this.resolve('eslint');
        this.setOption('eslintPath', eslintPath);
    }
    /**
     * auto-fix rule violations
     *
     * @public
     * @decorator `@bind`
     */
    fix(fix = true) {
        this.setOption('fix', fix);
        return this;
    }
};
__decorate([
    bind
], BudEslint.prototype, "register", null);
__decorate([
    bind
], BudEslint.prototype, "fix", null);
BudEslint = __decorate([
    label('@roots/bud-eslint'),
    expose('eslint'),
    plugin(EslintPlugin),
    options({
        extensions: ['js', 'jsx', 'ts', 'tsx', 'vue'],
        cacheLocation: app => app.path('@storage/cache/eslint'),
        cwd: app => app.path(),
        resolvePluginsRelativeTo: app => app.path(),
        threads: false,
    })
], BudEslint);
export default BudEslint;
//# sourceMappingURL=extension.js.map