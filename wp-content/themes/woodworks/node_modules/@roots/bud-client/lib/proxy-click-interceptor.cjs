/* eslint-disable no-console */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const main = (proxy = null) => __awaiter(this, void 0, void 0, function* () {
    try {
        const { headers } = yield fetch(window.location.href, { method: 'GET' });
        proxy = new URL(headers.get('x-bud-proxy-origin')).href;
    }
    catch (err) {
        return console.error(err);
    }
    try {
        setInterval(() => [
            [document.getElementsByTagName('a'), 'href'],
            [document.getElementsByTagName('link'), 'href'],
        ]
            .map(([elements, attribute]) => [Array.from(elements), attribute])
            .forEach(([elements, attribute]) => elements
            .filter(el => el.hasAttribute(attribute))
            .filter(el => !el.hasAttribute('__bud_processed'))
            .filter(el => el.getAttribute(attribute).startsWith(proxy))
            .map(el => {
            const value = el.getAttribute(attribute);
            console.info(`replacing ${attribute} on ${el.tagName} with value of ${value}`);
            el.setAttribute(attribute, value.replace(proxy, '/'));
            el.setAttribute('__bud_processed', '');
        })), 1000);
    }
    catch (err) {
        return console.error(`There was a problem replacing hrefs in the proxied response. Exiting script early.`, err);
    }
});
(() => __awaiter(this, void 0, void 0, function* () {
    return window.requestAnimationFrame(function ready() {
        return __awaiter(this, void 0, void 0, function* () {
            return document.body
                ? yield main()
                : window.requestAnimationFrame(ready);
        });
    });
}))();
//# sourceMappingURL=proxy-click-interceptor.cjs.map