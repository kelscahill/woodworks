import type { Bud, Locations } from '../index.js';
declare type AbsolutePath = `/${string}`;
declare type RelativePath = `./${string}`;
declare type Handle = `${keyof Locations & string}`;
declare type HandleSlashPath = `${Handle}/${string}`;
declare type FileHandle = `@name` | `@file`;
/**
 * Transform `@alias` path
 *
 * @param app - Bud instance
 * @param base - Path segment(s)
 * @returns string
 *
 * @public
 */
export declare const parseAlias: (app: Bud, ...base: Array<string>) => string;
/**
 * Transform `@alias` path
 *
 * @param app - Bud instance
 * @param base - Path segment
 * @returns string
 *
 * @public
 */
export interface path {
    (base?: Handle | FileHandle | HandleSlashPath | RelativePath | AbsolutePath, ...segments: Array<string>): string;
}
export declare const path: path;
export {};
//# sourceMappingURL=path.d.ts.map