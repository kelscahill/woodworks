import type { Bud } from '../bud.js';
import type { Options } from '../config/options.js';
/**
 * make function interface
 *
 * @internal
 */
export interface make {
    (seed: string | Options, tap?: (app: Bud) => Promise<Bud>): Bud;
}
/**
 * Instantiate a child instance and add to {@link Bud.children} container
 *
 * @remarks
 * **make** takes two parameters:
 *
 * - The **name** of the new compiler
 * - Optional: callback to use for configuration
 *
 * @example
 * ```js
 * bud.make('scripts', async child => child.entry('app', 'app.js'))
 * ```
 *
 * @public
 */
export declare const make: make;
//# sourceMappingURL=make.d.ts.map