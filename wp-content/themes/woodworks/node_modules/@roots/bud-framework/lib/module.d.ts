/// <reference types="node" />
import type { Bud } from './bud.js';
/**
 * Module resolver
 *
 * @public
 */
export declare class Module {
    app: Bud;
    /**
     * Node require
     *
     * @public
     */
    require: NodeRequire;
    /**
     * Class constructor
     *
     * @public
     */
    constructor(app: Bud);
    /**
     * Get `package.json` absolute path from a module signifier
     *
     * @public
     * @decorator `@bind`
     */
    getDirectory(signifier: string, parent?: string): Promise<string>;
    /**
     * Get `package.json` absolute path from a module signifier
     *
     * @public
     * @decorator `@bind`
     */
    getManifestPath(pkgName: string): Promise<string>;
    /**
     * Read `package.json` manifest from a module signifier
     *
     * @public
     * @decorator `@bind`
     */
    readManifest(signifier: string): Promise<any>;
    /**
     * Resolve a module path from its signifier
     *
     * @public
     * @decorator `@bind`
     */
    resolve(signifier: string, parent?: string): Promise<string>;
    /**
     * Import a module from its signifier
     *
     * @public
     * @decorator `@bind`
     */
    import<T = any>(signifier: string, context?: string): Promise<T>;
}
//# sourceMappingURL=module.d.ts.map