import { __decorate } from "tslib";
import { bind } from 'helpful-decorators';
import HtmlWebpackPlugin from 'html-webpack-plugin';
/**
 * Template variable interpolation plugin for {@link webpack}
 *
 * @public
 */
export class InterpolateHtmlPlugin {
    /**
     * Class constructor
     *
     * @param htmlWebpackPlugin - {@link HtmlWebpackPlugin}
     * @param replacements - {@link Record} of regular expressions
     *
     * @public
     */
    constructor(htmlWebpackPlugin, replacements) {
        this.htmlWebpackPlugin = htmlWebpackPlugin;
        this.replacements = replacements;
    }
    /**
     * {@link WebpackPluginInstance.apply}
     *
     * @public
     * @decorator `@bind`
     */
    apply(compiler) {
        compiler.hooks.compilation.tap('InterpolateHtmlPlugin', this.modifyHtmlWebpackPluginOptions);
    }
    /**
     * @param compilation - {@link Compilation}
     *
     * @public
     * @decorator `@bind`
     */
    modifyHtmlWebpackPluginOptions(compilation) {
        HtmlWebpackPlugin.getHooks(compilation).afterTemplateExecution.tap('InterpolateHtmlPlugin', (data) => {
            Object.entries(this.replacements).forEach(([key, value]) => {
                data.html = data.html.replaceAll(new RegExp(`%${key}%`, 'g'), value);
            });
            return data;
        });
    }
}
__decorate([
    bind
], InterpolateHtmlPlugin.prototype, "apply", null);
__decorate([
    bind
], InterpolateHtmlPlugin.prototype, "modifyHtmlWebpackPluginOptions", null);
//# sourceMappingURL=interpolate-html-plugin.plugin.js.map