import { isString } from 'lodash-es';
/**
 * Create a module chunk
 *
 * @example
 * Create an `alpine` chunk
 *
 * ```js
 * bud.bundle('alpine', 'alpine')
 * ```
 *
 * @public
 */
export const method = function (name, matcher) {
    const ctx = this;
    const test = compose(matcher ?? name, normalizeMatcher, makeTest);
    ctx.hooks.on('build.optimization.splitChunks', splitChunks => ({
        ...(splitChunks ?? {
            chunks: 'all',
            automaticNameDelimiter: `/`,
            minSize: 0,
        }),
        cacheGroups: {
            ...(splitChunks?.cacheGroups ?? {}),
            [name]: {
                idHint: name,
                filename: `js/bundle/${name}/[name].js`,
                test,
                priority: -10,
            },
        },
    }));
    return ctx;
};
const compose = (v, ...fns) => fns.reduce((a, fn) => fn(a), v);
const normalizeMatcher = (matcher) => (isString(matcher) ? [matcher] : matcher);
const makeTest = (matcher) => new RegExp(`[\\/](${matcher.reduce((a, c) => `${a}|${c}`)})[\\/]`);
//# sourceMappingURL=index.js.map